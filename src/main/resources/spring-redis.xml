<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-4.3.xsd 
	   http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context-4.3.xsd
	   http://www.springframework.org/schema/cache
	   http://www.springframework.org/schema/cache/spring-cache-4.3.xsd">

	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:redis.properties" />

	<!-- 配置JedisPoolConfig实例 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<!--最大空闲数 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!--连接池的最大数据库连接数 -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!--最大建立连接等待时间 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<!--逐出连接的最小空闲时间 默认1800000毫秒(30分钟) -->
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
		<!--每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3 -->
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
		<!--逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1 -->
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
		<!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个 -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<!--在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />
	</bean>

	<!-- 配置JedisConnectionFactory -->
	<bean id="jedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<property name="poolConfig" ref="poolConfig" />

		<!--IP地址 -->
		<property name="hostName" value="${redis.hostName}"></property>
		<!--端口号 -->
		<property name="port" value="${redis.port}"></property>
		<!--如果Redis设置有密码 -->
		<!--<property name="password" value="${redis.password}" /> -->
		<!--客户端超时时间单位是毫秒 -->
		<property name="timeout" value="${redis.timeout}"></property>
	</bean>

	<!-- 配置RedisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory" />

		<!--开启事务 -->
		<property name="enableTransactionSupport" value="true"></property>
	</bean>

	<!-- 配置RedisCacheManager -->
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager">
		<constructor-arg name="redisOperations" ref="redisTemplate" />
		<property name="defaultExpiration" value="3000" />
	</bean>

	<!-- 配置RedisCacheConfig -->
	<bean id="redisCacheConfig" class="com.loyal.manager.RedisCacheConfig">
		<constructor-arg ref="jedisConnectionFactory" />
		<constructor-arg ref="redisTemplate" />
		<constructor-arg ref="redisCacheManager" />
	</bean>

	<!-- 配置JedisPoolConfig实例 ，用于测试 JedisPool -->
	<bean id="poolConfig2" class="redis.clients.jedis.JedisPoolConfig">
		<!--最大空闲数 -->
		<property name="maxIdle" value="${redis.maxIdle}" />
		<!--连接池的最大数据库连接数 -->
		<property name="maxTotal" value="${redis.maxTotal}" />
		<!--最大建立连接等待时间 -->
		<property name="maxWaitMillis" value="${redis.maxWaitMillis}" />
		<!--逐出连接的最小空闲时间 默认1800000毫秒(30分钟) -->
		<property name="minEvictableIdleTimeMillis" value="${redis.minEvictableIdleTimeMillis}" />
		<!--每次逐出检查时 逐出的最大数目 如果为负数就是 : 1/abs(n), 默认3 -->
		<property name="numTestsPerEvictionRun" value="${redis.numTestsPerEvictionRun}" />
		<!--逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1 -->
		<property name="timeBetweenEvictionRunsMillis" value="${redis.timeBetweenEvictionRunsMillis}" />
		<!--是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个 -->
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
		<!--在空闲时检查有效性, 默认false -->
		<property name="testWhileIdle" value="${redis.testWhileIdle}" />
	</bean>

	<!-- redis连接池 -->  
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="destroy"  depends-on="poolConfig2">  
        <constructor-arg name="poolConfig" ref="poolConfig2" /> <!-- 加载jedisPool配置信息 -->  
        <constructor-arg name="host" value="${redis.hostName}" /><!-- redis主机地址 -->  
        <constructor-arg name="port" value="${redis.port}"/> <!-- redis连接端口 -->  
        <!-- <constructor-arg name="password" value="${redis.pass}"/> 密码 -->  
        <!--<constructor-arg name="database" value="${redis.database}"/> 数据库 -->  
        <!--<constructor-arg name="timeout" value="${redis.timeout}"/> 连接超时 -->  
    </bean>  

</beans>
    